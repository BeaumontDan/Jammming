{"ast":null,"code":"var _jsxFileName = \"/Users/danbeaumont/Documents/Code_Projects/jammming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styles from './App.module.css';\n\n// import components\nimport Header from '../Header/Header';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: 'Summer in the City',\n    artist: 'The Lovin Spoonful',\n    album: 'Hums Of The Lovin Spoonful',\n    id: 1\n  }, {\n    name: 'All That She Wants',\n    artist: 'Ace of Bace',\n    album: 'The Sign',\n    id: 2\n  }, {\n    name: 'Its Like That',\n    artist: 'Run DMC',\n    album: 'The Greatest Hits',\n    id: 'ilt'\n  }]);\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const search = useCallback(phrase => {\n    Spotify.search(phrase).then(setSearchResults);\n  }, []);\n  const addTrack = useCallback(track => {\n    if (playlistTracks.some(savedTrack => savedTrack.id === track.id)) return;\n    setPlaylistTracks(prevTracks => [...prevTracks, track]);\n  }, [playlistTracks]);\n  const removeTrack = useCallback(track => {\n    setPlaylistTracks(prevTracks => prevTracks.filter(currentTrack => currentTrack.id !== track.id));\n  }, []);\n  const updatePlaylistName = useCallback(name => {\n    setPlaylistName(name);\n  }, []);\n  const savePlaylist = useCallback(() => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName(\"My Playlist\");\n      setPlaylistTracks([]);\n    });\n  }, [playlistName, playlistTracks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.App,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Playlist,\n        children: /*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"uFHp7Xm5lntlC5tdjaS3OzYgNSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","styles","Header","Playlist","SearchBar","SearchResults","Spotify","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","search","phrase","then","addTrack","track","some","savedTrack","prevTracks","removeTrack","filter","currentTrack","updatePlaylistName","savePlaylist","trackUris","map","uri","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","_c","$RefreshReg$"],"sources":["/Users/danbeaumont/Documents/Code_Projects/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styles from './App.module.css';\n\n// import components\nimport Header from '../Header/Header'\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\n\nconst App = () => {\n\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: 'Summer in the City',\n      artist: 'The Lovin Spoonful',\n      album: 'Hums Of The Lovin Spoonful',\n      id: 1\n    },\n    {\n      name: 'All That She Wants',\n      artist: 'Ace of Bace',\n      album: 'The Sign',\n      id: 2\n    },\n    {\n      name: 'Its Like That',\n      artist: 'Run DMC',\n      album: 'The Greatest Hits',\n      id: 'ilt'\n    }\n  ]);\n\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n\n\n  \n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const search = useCallback((phrase) => {\n    Spotify.search(phrase).then(setSearchResults);\n  }, []);\n\n  const addTrack = useCallback((track) => {\n    if (playlistTracks.some((savedTrack) => savedTrack.id === track.id))\n      return;\n\n    setPlaylistTracks((prevTracks) => [...prevTracks, track]);\n  }, [playlistTracks]\n  );\n\n  const removeTrack = useCallback((track) => {\n    setPlaylistTracks((prevTracks) =>\n      prevTracks.filter((currentTrack) => currentTrack.id !== track.id)\n    );\n  }, []);\n\n  const updatePlaylistName = useCallback((name) => {\n    setPlaylistName(name);\n  }, []);\n\n  const savePlaylist = useCallback(() => {\n    const trackUris = playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName(\"My Playlist\");\n      setPlaylistTracks([]);\n    });\n  }, [playlistName, playlistTracks]);\n\n  return (\n    <>\n      <div className={styles.App}>\n\n        <Header />\n\n        <SearchBar onSearch={search} />\n\n        <div className={styles.Playlist}>\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack} />\n\n          {/*\n        <Playlist\n          playlistName={playlistName}\n          playlistTracks={playlistTracks}\n          onNameChange={updatePlaylistName}\n          onRemove={removeTrack}\n          onSave={savePlaylist}\n        />\n*/}\n        </div>\n\n      </div>\n\n    </>\n  );\n\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}