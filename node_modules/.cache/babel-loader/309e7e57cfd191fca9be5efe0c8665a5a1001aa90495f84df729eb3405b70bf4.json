{"ast":null,"code":"let accessToken = \"\";\nconst clientID = \"520c3806fd5f41bf90fcddc4db84db6a\";\n//const redirectUrl = \"http://localhost:3000\";\nconst redirectUrl = \"https://syphersjammmingproject.surge.sh\";\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) return accessToken;\n    const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n    const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n    if (tokenInURL && expiryTime) {\n      accessToken = tokenInURL[1];\n      const expiresIn = Number(expiryTime[1]);\n      window.setTimeout(() => accessToken = \"\", expiresIn * 1000);\n      window.history.pushState(\"Access token\", null, \"/\");\n      return accessToken;\n    }\n    const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`;\n    window.location = redirect;\n  },\n  search(term) {\n    accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(jsonResponse => {\n      if (!jsonResponse) {\n        console.log(\"Response Error\");\n      }\n      return jsonResponse.tracks.items.map(t => ({\n        id: t.id,\n        name: t.name,\n        artist: t.artists[0].name,\n        album: t.album.name,\n        URI: t.uri\n      }));\n    });\n  },\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris) return;\n    const aToken = Spotify.getAccessToken();\n    const header = {\n      Authorization: `Bearer ${aToken}`\n    };\n    let userId;\n    return fetch(`https://api.spotify.com/v1/me`, {\n      headers: header\n    }).then(response => response.json()).then(jsonResponse => {\n      userId = jsonResponse.id;\n      let playlistId;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: header,\n        method: \"post\",\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(response => response.json()).then(jsonResponse => {\n        playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: header,\n          method: \"post\",\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["accessToken","clientID","redirectUrl","Spotify","getAccessToken","tokenInURL","window","location","href","match","expiryTime","expiresIn","Number","setTimeout","history","pushState","redirect","search","term","fetch","method","headers","Authorization","then","response","json","jsonResponse","console","log","tracks","items","map","t","id","name","artist","artists","album","URI","uri","savePlaylist","trackUris","aToken","header","userId","playlistId","body","JSON","stringify","uris"],"sources":["/Users/danbeaumont/Documents/Code_Projects/jammming/src/util/Spotify.js"],"sourcesContent":["let accessToken = \"\";\n\nconst clientID = \"520c3806fd5f41bf90fcddc4db84db6a\";\n//const redirectUrl = \"http://localhost:3000\";\nconst redirectUrl = \"https://syphersjammmingproject.surge.sh\";\n\nconst Spotify = {\n    getAccessToken() {\n        if (accessToken) return accessToken;\n\n        const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n        const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n\n        if (tokenInURL && expiryTime) {\n            accessToken = tokenInURL[1];\n            const expiresIn = Number(expiryTime[1]);\n\n            window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n\n            window.history.pushState(\"Access token\", null, \"/\");\n            return accessToken;\n        }\n\n        const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`;\n        window.location = redirect;\n    },\n\n    search(term) {\n        accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${accessToken}` },\n        })\n        .then((response) => response.json())\n        .then((jsonResponse) => {\n            if (!jsonResponse) {\n                console.log(\"Response Error\");\n            }\n            return jsonResponse.tracks.items.map((t) => ({\n                id: t.id,\n                name: t.name,\n                artist: t.artists[0].name,\n                album: t.album.name,\n                URI: t.uri,\n            }));\n        });\n    },\n\n    savePlaylist(name, trackUris) {\n        if (!name || !trackUris) return;\n        const aToken = Spotify.getAccessToken();\n        const header = { Authorization: `Bearer ${aToken}` };\n        let userId;\n        return fetch(`https://api.spotify.com/v1/me`, { headers: header })\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            userId = jsonResponse.id;\n            let playlistId;\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n              headers: header,\n              method: \"post\",\n              body: JSON.stringify({ name: name }),\n            })\n              .then((response) => response.json())\n              .then((jsonResponse) => {\n                playlistId = jsonResponse.id;\n                return fetch(\n                  `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n                  {\n                    headers: header,\n                    method: \"post\",\n                    body: JSON.stringify({ uris: trackUris }),\n                  }\n                );\n              });\n          });\n      },\n};\n\nexport default Spotify; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}