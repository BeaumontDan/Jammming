{"ast":null,"code":"var _jsxFileName = \"/Users/danbeaumont/Documents/Code_Projects/jammming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './App.module.css';\n\n// import components\nimport Header from '../Header/Header';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: 'Summer in the City',\n    artist: 'The Lovin Spoonful',\n    album: 'Hums Of The Lovin Spoonful',\n    id: 1\n  }, {\n    name: 'All That She Wants',\n    artist: 'Ace of Bace',\n    album: 'The Sign',\n    id: 2\n  }, {\n    name: 'Its Like That',\n    artist: 'Run DMC',\n    album: 'The Greatest Hits',\n    id: 3\n  }]);\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: 'Dreaming of You',\n    artist: 'The Coral',\n    album: 'The Invisible Invasion',\n    id: 4\n  }, {\n    name: 'Can I Kick It',\n    artist: 'A Tribe Called Quest',\n    album: 'Peoples Instinctive Travels and the Paths of Rhythm',\n    id: 5\n  }]);\n  const addTrack = track => {\n    const existingTrack = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  };\n  const removeTrack = track => {\n    const existingTrack = playlistTracks.filter(t => t.id !== track.id);\n    setPlaylistTracks(existingTrack);\n  };\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n  const savePlaylist = () => {\n    const trackURIs = playlistTracks.map(t => t.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      setPlaylistName([]);\n      updatePlaylistName(\"New Playlist\");\n    });\n  };\n  const search = term => {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.App,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Playlist,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"gIJygMA2w9Y0pPHOTAHnRTz+a3w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","Header","Playlist","SearchBar","SearchResults","Spotify","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","existingTrack","find","t","newTrack","concat","console","log","removeTrack","filter","updatePlaylistName","savePlaylist","trackURIs","map","uri","then","search","term","result","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Users/danbeaumont/Documents/Code_Projects/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './App.module.css';\n\n// import components\nimport Header from '../Header/Header'\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\n\nconst App = () => {\n\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: 'Summer in the City',\n      artist: 'The Lovin Spoonful',\n      album: 'Hums Of The Lovin Spoonful',\n      id: 1\n    },\n    {\n      name: 'All That She Wants',\n      artist: 'Ace of Bace',\n      album: 'The Sign',\n      id: 2\n    },\n    {\n      name: 'Its Like That',\n      artist: 'Run DMC',\n      album: 'The Greatest Hits',\n      id: 3\n    }\n  ]);\n\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n\n  const [playlistTracks, setPlaylistTracks] = useState([\n    {\n      name: 'Dreaming of You',\n      artist: 'The Coral',\n      album: 'The Invisible Invasion',\n      id: 4\n    },\n    {\n      name: 'Can I Kick It',\n      artist: 'A Tribe Called Quest',\n      album: 'Peoples Instinctive Travels and the Paths of Rhythm',\n      id: 5\n    }\n  ]);\n\n  const addTrack = (track) => {\n    const existingTrack = playlistTracks.find((t) => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n\n  const removeTrack = (track) => {\n    const existingTrack = playlistTracks.filter((t) => t.id !== track.id);\n    setPlaylistTracks(existingTrack);\n  }\n\n\n  const updatePlaylistName = (name) => {\n    setPlaylistName(name);\n  }\n\n  const savePlaylist = () => {\n    const trackURIs = playlistTracks.map((t) => t.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      setPlaylistName([]);\n      updatePlaylistName(\"New Playlist\");\n    });\n  }\n\n  const search = (term) => {\n    Spotify.search(term).then((result) => setSearchResults(result));\n    console.log(term);\n  }\n\n  return (\n    <>\n      <div className={styles.App}>\n\n        <Header />\n\n        <SearchBar onSearch={search} />\n\n        <div className={styles.Playlist}>\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack} />\n\n          <Playlist\n            playlistName={playlistName}\n            playlistTracks={playlistTracks}\n            onRemove={removeTrack}\n            onNameChange={updatePlaylistName}\n            onSave={savePlaylist}\n          />\n\n        </div>\n\n      </div>\n\n    </>\n  );\n\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}