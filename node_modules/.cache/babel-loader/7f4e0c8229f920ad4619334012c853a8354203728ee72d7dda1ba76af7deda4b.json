{"ast":null,"code":"var _jsxFileName = \"/Users/danbeaumont/Documents/Code_Projects/jammming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styles from './App.module.css';\n\n// import components\n\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults.';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const search = useCallback(phrase => {\n    Spotify.search(phrase).then(setSearchResults);\n  }, []);\n  const addTrack = useCallback(track => {\n    if (playlistTracks.some(savedTrack => savedTrack.id === track.id)) return;\n    setPlaylistTracks(prevTracks => [...prevTracks, track]);\n  }, [playlistTracks]);\n  const removeTrack = useCallback(track => {\n    setPlaylistTracks(prevTracks => prevTracks.filter(currentTrack => currentTrack.id !== track.id));\n  }, []);\n  const updatePlaylistName = useCallback(name => {\n    setPlaylistName(name);\n  }, []);\n  const savePlaylist = useCallback(() => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName(\"My Playlist\");\n      setPlaylistTracks([]);\n    });\n  }, [playlistName, playlistTracks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.App,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Playlist,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          searchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onNameChange: updatePlaylistName,\n          onRemove: removeTrack,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"NMir20Cn65dZ8hqprotCvQILpt4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","styles","Playlist","SearchBar","SearchResults","Spotify","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","search","phrase","then","addTrack","track","some","savedTrack","id","prevTracks","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","children","className","Header","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onNameChange","onRemove","onSave","_c","$RefreshReg$"],"sources":["/Users/danbeaumont/Documents/Code_Projects/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styles from './App.module.css';\n\n// import components\n\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults.';\nimport Spotify from '../../util/Spotify';\n\nconst App = () => {\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState('My Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const search = useCallback((phrase) => {\n    Spotify.search(phrase).then(setSearchResults);\n  }, []);\n\n  const addTrack = useCallback((track) => {\n    if (playlistTracks.some((savedTrack) => savedTrack.id === track.id))\n      return;\n\n    setPlaylistTracks((prevTracks) => [...prevTracks, track]);\n  }, [playlistTracks]\n);\n\nconst removeTrack = useCallback((track) => {\n  setPlaylistTracks((prevTracks) =>\n    prevTracks.filter((currentTrack) => currentTrack.id !== track.id)\n  );\n}, []);\n\nconst updatePlaylistName = useCallback((name) => {\n  setPlaylistName(name);\n}, []);\n\nconst savePlaylist = useCallback(() => {\n  const trackUris = playlistTracks.map((track) => track.uri);\n  Spotify.savePlaylist(playlistName, trackUris).then(() => {\n    setPlaylistName(\"My Playlist\");\n    setPlaylistTracks([]);\n  });\n}, [playlistName, playlistTracks]);\n\n  return (\n    <>\n    <div className={styles.App}>\n\n      <Header />\n\n      <SearchBar onSearch={search} />\n\n      <div className={styles.Playlist}>\n        <SearchResults searchResults={searchResults} onAdd={addTrack} />\n\n        <Playlist\n          playlistName={playlistName}\n          playlistTracks={playlistTracks}\n          onNameChange={updatePlaylistName}\n          onRemove={removeTrack}\n          onSave={savePlaylist}\n        />\n\n      </div>\n\n    </div>\n\n    </>\n  );\n\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,kBAAkB;;AAErC;;AAEA,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,aAAa,CAAC;EAC/D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMmB,MAAM,GAAGlB,WAAW,CAAEmB,MAAM,IAAK;IACrCd,OAAO,CAACa,MAAM,CAACC,MAAM,CAAC,CAACC,IAAI,CAACP,gBAAgB,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,QAAQ,GAAGrB,WAAW,CAAEsB,KAAK,IAAK;IACtC,IAAIN,cAAc,CAACO,IAAI,CAAEC,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,EACjE;IAEFR,iBAAiB,CAAES,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEJ,KAAK,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACN,cAAc,CACpB,CAAC;EAED,MAAMW,WAAW,GAAG3B,WAAW,CAAEsB,KAAK,IAAK;IACzCL,iBAAiB,CAAES,UAAU,IAC3BA,UAAU,CAACE,MAAM,CAAEC,YAAY,IAAKA,YAAY,CAACJ,EAAE,KAAKH,KAAK,CAACG,EAAE,CAClE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,kBAAkB,GAAG9B,WAAW,CAAE+B,IAAI,IAAK;IAC/ChB,eAAe,CAACgB,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGhC,WAAW,CAAC,MAAM;IACrC,MAAMiC,SAAS,GAAGjB,cAAc,CAACkB,GAAG,CAAEZ,KAAK,IAAKA,KAAK,CAACa,GAAG,CAAC;IAC1D9B,OAAO,CAAC2B,YAAY,CAAClB,YAAY,EAAEmB,SAAS,CAAC,CAACb,IAAI,CAAC,MAAM;MACvDL,eAAe,CAAC,aAAa,CAAC;MAC9BE,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACH,YAAY,EAAEE,cAAc,CAAC,CAAC;EAEhC,oBACET,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACA7B,OAAA;MAAK8B,SAAS,EAAEpC,MAAM,CAACS,GAAI;MAAA0B,QAAA,gBAEzB7B,OAAA,CAAC+B,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVnC,OAAA,CAACJ,SAAS;QAACwC,QAAQ,EAAEzB;MAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/BnC,OAAA;QAAK8B,SAAS,EAAEpC,MAAM,CAACC,QAAS;QAAAkC,QAAA,gBAC9B7B,OAAA,CAACH,aAAa;UAACQ,aAAa,EAAEA,aAAc;UAACgC,KAAK,EAAEvB;QAAS;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEhEnC,OAAA,CAACL,QAAQ;UACPY,YAAY,EAAEA,YAAa;UAC3BE,cAAc,EAAEA,cAAe;UAC/B6B,YAAY,EAAEf,kBAAmB;UACjCgB,QAAQ,EAAEnB,WAAY;UACtBoB,MAAM,EAAEf;QAAa;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC,gBAEJ,CAAC;AAGP,CAAC;AAAC/B,EAAA,CA9DID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAgET,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}