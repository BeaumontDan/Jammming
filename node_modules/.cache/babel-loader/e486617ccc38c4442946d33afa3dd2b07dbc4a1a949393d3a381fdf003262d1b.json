{"ast":null,"code":"let accessToken=\"\";const clientID=\"520c3806fd5f41bf90fcddc4db84db6a\";const redirectUrl=\"https://beaumontdan.github.io/Jammming/\";const Spotify={getAccessToken(){if(accessToken)return accessToken;const tokenInURL=window.location.href.match(/access_token=([^&]*)/);const expiryTime=window.location.href.match(/expires_in=([^&]*)/);if(tokenInURL&&expiryTime){accessToken=tokenInURL[1];const expiresIn=Number(expiryTime[1]);window.setTimeout(()=>accessToken=\"\",expiresIn*1000);window.history.pushState(\"Access token\",null,\"/\");return accessToken;}const redirect=`https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`;window.location=redirect;},search(term){accessToken=Spotify.getAccessToken();return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,{method:\"GET\",headers:{Authorization:`Bearer ${accessToken}`}}).then(response=>response.json()).then(jsonResponse=>{if(!jsonResponse){console.log(\"Response Error\");}return jsonResponse.tracks.items.map(t=>({id:t.id,name:t.name,artist:t.artists[0].name,album:t.album.name,URI:t.uri}));});},savePlaylist(name,trackUris){if(!name||!trackUris)return;const aToken=Spotify.getAccessToken();const headers={Authorization:`Bearer ${aToken}`};let userId;return fetch(`https://api.spotify.com/v1/me`,{headers:headers}).then(response=>response.json()).then(jsonResponse=>{userId=jsonResponse.id;let playlistId;return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`,{headers:headers,method:\"post\",body:JSON.stringify({name:name})}).then(response=>response.json()).then(jsonResponse=>{playlistId=jsonResponse.id;return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,{headers:headers,method:\"post\",body:JSON.stringify({uris:trackUris})});});});}};export default Spotify;","map":{"version":3,"names":["accessToken","clientID","redirectUrl","Spotify","getAccessToken","tokenInURL","window","location","href","match","expiryTime","expiresIn","Number","setTimeout","history","pushState","redirect","search","term","fetch","method","headers","Authorization","then","response","json","jsonResponse","console","log","tracks","items","map","t","id","name","artist","artists","album","URI","uri","savePlaylist","trackUris","aToken","userId","playlistId","body","JSON","stringify","uris"],"sources":["/Users/danbeaumont/Documents/Code_Projects/jammming/src/util/Spotify.js"],"sourcesContent":["let accessToken = \"\";\n\nconst clientID = \"520c3806fd5f41bf90fcddc4db84db6a\";\nconst redirectUrl = \"https://beaumontdan.github.io/Jammming/\";\n\nconst Spotify = {\n    getAccessToken() {\n        if (accessToken) return accessToken;\n\n        const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n        const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n\n        if (tokenInURL && expiryTime) {\n            accessToken = tokenInURL[1];\n            const expiresIn = Number(expiryTime[1]);\n\n            window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n\n            window.history.pushState(\"Access token\", null, \"/\");\n            return accessToken;\n        }\n\n        const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`;\n        window.location = redirect;\n    },\n\n    search(term) {\n        accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${accessToken}` },\n        })\n        .then((response) => response.json())\n        .then((jsonResponse) => {\n            if (!jsonResponse) {\n                console.log(\"Response Error\");\n            }\n            return jsonResponse.tracks.items.map((t) => ({\n                id: t.id,\n                name: t.name,\n                artist: t.artists[0].name,\n                album: t.album.name,\n                URI: t.uri,\n            }));\n        });\n    },\n\n    savePlaylist(name, trackUris) {\n        if (!name || !trackUris) return;\n        const aToken = Spotify.getAccessToken();\n        const headers = { Authorization: `Bearer ${aToken}` };\n        let userId;\n        return fetch(`https://api.spotify.com/v1/me`, { headers: headers })\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            userId = jsonResponse.id;\n            let playlistId;\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n              headers: headers,\n              method: \"post\",\n              body: JSON.stringify({ name: name }),\n            })\n              .then((response) => response.json())\n              .then((jsonResponse) => {\n                playlistId = jsonResponse.id;\n                return fetch(\n                  `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n                  {\n                    headers: headers,\n                    method: \"post\",\n                    body: JSON.stringify({ uris: trackUris }),\n                  }\n                );\n              });\n          });\n      },\n};\n\nexport default Spotify; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}